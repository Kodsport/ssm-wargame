// Code generated by goa v3.5.2, DO NOT EDIT.
//
// auth HTTP client types
//
// Command:
// $ goa gen github.com/sakerhetsm/ssm-wargame/internal/design -o internal/

package client

import (
	auth "github.com/sakerhetsm/ssm-wargame/internal/gen/auth"
	goa "goa.design/goa/v3/pkg"
)

// ExchangeDiscordRequestBody is the type of the "auth" service
// "ExchangeDiscord" endpoint HTTP request body.
type ExchangeDiscordRequestBody struct {
	Code  string `form:"code" json:"code" xml:"code"`
	State string `form:"state" json:"state" xml:"state"`
}

// GenerateDiscordAuthURLResponseBody is the type of the "auth" service
// "GenerateDiscordAuthURL" endpoint HTTP response body.
type GenerateDiscordAuthURLResponseBody struct {
	URL *string `form:"url,omitempty" json:"url,omitempty" xml:"url,omitempty"`
}

// ExchangeDiscordResponseBody is the type of the "auth" service
// "ExchangeDiscord" endpoint HTTP response body.
type ExchangeDiscordResponseBody struct {
	// A token to authenticate with the SSM API
	JWT *string `form:"jwt,omitempty" json:"jwt,omitempty" xml:"jwt,omitempty"`
}

// NewExchangeDiscordRequestBody builds the HTTP request body from the payload
// of the "ExchangeDiscord" endpoint of the "auth" service.
func NewExchangeDiscordRequestBody(p *auth.ExchangeDiscordPayload) *ExchangeDiscordRequestBody {
	body := &ExchangeDiscordRequestBody{
		Code:  p.Code,
		State: p.State,
	}
	return body
}

// NewGenerateDiscordAuthURLResultOK builds a "auth" service
// "GenerateDiscordAuthURL" endpoint result from a HTTP "OK" response.
func NewGenerateDiscordAuthURLResultOK(body *GenerateDiscordAuthURLResponseBody) *auth.GenerateDiscordAuthURLResult {
	v := &auth.GenerateDiscordAuthURLResult{
		URL: *body.URL,
	}

	return v
}

// NewExchangeDiscordResultOK builds a "auth" service "ExchangeDiscord"
// endpoint result from a HTTP "OK" response.
func NewExchangeDiscordResultOK(body *ExchangeDiscordResponseBody) *auth.ExchangeDiscordResult {
	v := &auth.ExchangeDiscordResult{
		JWT: *body.JWT,
	}

	return v
}

// ValidateGenerateDiscordAuthURLResponseBody runs the validations defined on
// GenerateDiscordAuthURLResponseBody
func ValidateGenerateDiscordAuthURLResponseBody(body *GenerateDiscordAuthURLResponseBody) (err error) {
	if body.URL == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("url", "body"))
	}
	return
}

// ValidateExchangeDiscordResponseBody runs the validations defined on
// ExchangeDiscordResponseBody
func ValidateExchangeDiscordResponseBody(body *ExchangeDiscordResponseBody) (err error) {
	if body.JWT == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("jwt", "body"))
	}
	return
}
