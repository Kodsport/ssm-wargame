// Code generated by goa v3.5.2, DO NOT EDIT.
//
// user client
//
// Command:
// $ goa gen github.com/sakerhetsm/ssm-wargame/internal/design -o internal/

package user

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "user" service client.
type Client struct {
	GetSelfEndpoint            goa.Endpoint
	UpdateSelfEndpoint         goa.Endpoint
	CompleteOnboardingEndpoint goa.Endpoint
	JoinSchoolEndpoint         goa.Endpoint
	LeaveSchoolEndpoint        goa.Endpoint
	SearchSchoolsEndpoint      goa.Endpoint
}

// NewClient initializes a "user" service client given the endpoints.
func NewClient(getSelf, updateSelf, completeOnboarding, joinSchool, leaveSchool, searchSchools goa.Endpoint) *Client {
	return &Client{
		GetSelfEndpoint:            getSelf,
		UpdateSelfEndpoint:         updateSelf,
		CompleteOnboardingEndpoint: completeOnboarding,
		JoinSchoolEndpoint:         joinSchool,
		LeaveSchoolEndpoint:        leaveSchool,
		SearchSchoolsEndpoint:      searchSchools,
	}
}

// GetSelf calls the "GetSelf" endpoint of the "user" service.
func (c *Client) GetSelf(ctx context.Context, p *GetSelfPayload) (res *GetSelfResult, err error) {
	var ires interface{}
	ires, err = c.GetSelfEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetSelfResult), nil
}

// UpdateSelf calls the "UpdateSelf" endpoint of the "user" service.
func (c *Client) UpdateSelf(ctx context.Context, p *UpdateSelfPayload) (err error) {
	_, err = c.UpdateSelfEndpoint(ctx, p)
	return
}

// CompleteOnboarding calls the "CompleteOnboarding" endpoint of the "user"
// service.
func (c *Client) CompleteOnboarding(ctx context.Context, p *CompleteOnboardingPayload) (err error) {
	_, err = c.CompleteOnboardingEndpoint(ctx, p)
	return
}

// JoinSchool calls the "JoinSchool" endpoint of the "user" service.
func (c *Client) JoinSchool(ctx context.Context, p *JoinSchoolPayload) (err error) {
	_, err = c.JoinSchoolEndpoint(ctx, p)
	return
}

// LeaveSchool calls the "LeaveSchool" endpoint of the "user" service.
func (c *Client) LeaveSchool(ctx context.Context, p *LeaveSchoolPayload) (err error) {
	_, err = c.LeaveSchoolEndpoint(ctx, p)
	return
}

// SearchSchools calls the "SearchSchools" endpoint of the "user" service.
func (c *Client) SearchSchools(ctx context.Context, p *SearchSchoolsPayload) (res []*School, err error) {
	var ires interface{}
	ires, err = c.SearchSchoolsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*School), nil
}
